<!-- Scrollable picture gallery -->
<Panel ux:Name="galleryPanel">
	<!-- Multi layout -->
	<ResourceObject ux:Name="Image" />
	<MultiLayout ux:Name="multiLayout" LayoutElement="galleryItems" />
	<!-- Details view -->
	<ux:Include File="Gallery.detailsView.ux" />
	<!-- Details mode trigger -->
	<WhileTrue ux:Name="detailsMode">
		<!-- Show/hide navigation -->
		<Change navbar.IsEnabled="false" Delay="0" Duration="0" DelayBack="0.2" DurationBack="0" />
		<!-- Setup layout -->
		<Change titlePanel.Opacity="1" Delay="0.3" Duration="0.1" DelayBack="0" DurationBack="0" />
		<Change photo.Visibility="Visible" Delay="0.4" Duration="0" DelayBack="0" DurationBack="0" />
		<Change detailsView.Visibility="Visible" Delay="0" Duration="0" DelayBack="0.4" DurationBack="0" />
		<Change backgroundPanel.Opacity="1" Delay="0" Duration="0.4" DelayBack="0" DurationBack="0" />
		<!-- Change layout -->
		<Set multiLayout.LayoutElement="detailsView" Direction="Forward" />
		<Set multiLayout.LayoutElement="galleryItems" Direction="Backward" />
	</WhileTrue>
	<!-- Background divider -->
	<Panel ux:Name="backgroundPanel" Opacity="0" Color="#000000b0" HitTestMode="None" IsEnabled="false" />
	<WhileKeyboardVisible>
		<Change backgroundPanel.IsEnabled="true" />
		<Change backgroundPanel.HitTestMode="LocalBounds" />
		<Change backgroundPanel.Opacity="1" Duration="0.2" />
	</WhileKeyboardVisible>
	<!-- Thumbnails list -->
	<ScrollingView ux:Name="galleryItems" ScrollToUrl="{scrollToUrl}">
		<!-- Next page trigger -->
		<WhileScrollable ScrollDirections="Down" Invert="true">
			<Callback Handler="{more}" />
		</WhileScrollable>
		<!-- Image layout -->
		<Panel Y="50">
			<ColumnLayout ux:Name="columnLayout" ColumnSize="150" Sizing="Fill" ItemSpacing="5" ColumnSpacing="5" />
			<WhileWindowLandscape>
				<Change columnLayout.ColumnSize="200" />
			</WhileWindowLandscape>
			<Each Items="{feed}">
				<!-- Lo-res images -->
				<Panel Color="#000" Aspect="{image_aspect}" BoxSizing="FillAspect">
					<LayoutAnimation>
						<Move Vector="1" Duration="0.4" RelativeTo="PositionChange" Easing="CircularInOut" />
					</LayoutAnimation>
					<Placeholder>
						<SolidColor Color="#393E45" />					
						<ImageView ux:Name="image" ImageUrl="{image_url}" ImageMemoryPolicy="UnloadUnused">
							<LayoutAnimation>
								<Move Vector="1" Duration="0.4" RelativeTo="WorldPositionChange" Easing="BackOut" EasingBack="BackIn" />
								<Resize Vector="1" Duration="0.4" RelativeTo="SizeChange" Easing="BackOut" EasingBack="BackIn" />
							</LayoutAnimation>
							<WhileLoaded>
								<Set imageLoaded.Value="true" />
								<Set image.Opacity="0" />
								<Change image.Opacity="1" Duration="0.2" Easing="CircularIn" />
							</WhileLoaded>
							<WhileCacheLoaded Bypass="Never">
								<Set imageLoaded.Value="true" />
							</WhileCacheLoaded>
							<WhileFailed>
								<Set imageFailed.Value="true" />
							</WhileFailed>
						</ImageView>
					</Placeholder>
					<WhilePressed>
		                <Scale Factor="0.98" Duration="0.4" Easing="QuadraticInOut" />
		            </WhilePressed>
	            	<LongPressed>
						<LaunchUri Uri="{url}" Delay="0.2" />
					</LongPressed>
					<!-- Interaction is only enabled when image loaded -->
					<WhileTrue ux:Name="imageLoaded">
						<Tapped>
							<!-- Disable sidebar -->
							<Callback Handler="{disableSidebar}" />
							<!-- This way we keep the UI synced -->
							<Set Target="imagePlaceholder.Aspect" Value="{image_aspect}" />
							<Set Target="hiresPhoto.ImageUrl" Value="{photo_url}" />
							<Set Target="nameText.Value" Value="{name}" />
							<Set Target="avatarImage.Url" Value="{avatar_url}" />
							<Set Target="launchUri.Uri" Value="{user_url}" />
							<Set Target="usernameText.Value" Value="{username}" />
							<Set Target="votesCountText.Value" Value="{votes_count}" />
							<!-- Trigger layout change -->
							<Set imagePlaceholder.Target="image" />
							<Set detailsMode.Value="true" />
							<BringToFront />
						</Tapped>
					</WhileTrue>
					<WhileTrue ux:Name="imageFailed">
						<Tapped>
							<RaiseUserEvent Name="Error">
							    <UserEventArg Name="message" StringValue="Error Loading Image" />
							</RaiseUserEvent>
						</Tapped>
					</WhileTrue>
				</Panel>
			</Each>
		</Panel>
	</ScrollingView>
</Panel>
